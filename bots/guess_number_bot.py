import os
import random
import logging

from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command, CommandStart
from aiogram.types import (KeyboardButton, Message, ReplyKeyboardMarkup,
                           ReplyKeyboardRemove, KeyboardButtonPollType)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)
handler = logging.FileHandler('my_log_info.log', mode='w')
formatter = logging.Formatter(
    fmt='[{asctime}] {levelname:8} [{filename}.{funcName}:{lineno}] {message}',
    datefmt='%a, %d %b %Y %H:%M:%S',
    style='{'
)
handler.setFormatter(formatter)
logger.addHandler(handler)

# –í–º–µ—Å—Ç–æ BOT_TOKEN –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —É @BotFather
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(BOT_TOKEN)
dp = Dispatcher()

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∫–Ω–æ–ø–æ–∫
button_1 = KeyboardButton(text='–°–æ–±–∞–∫ ü¶Æ')
button_2 = KeyboardButton(text='–û–≥—É—Ä—Ü–æ–≤ ü•í')
# –°–æ–∑–¥–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
contact_btn = KeyboardButton(
    text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω',
    request_contact=True
)
geo_btn = KeyboardButton(
    text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é',
    request_location=True
)
poll_btn = KeyboardButton(
    text='–°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å/–≤–∏–∫—Ç–æ—Ä–∏–Ω—É',
    request_poll=KeyboardButtonPollType()
)

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –¥–æ–±–∞–≤–ª—è—è –≤ –Ω–µ–≥–æ –∫–Ω–æ–ø–∫–∏
keyboard = ReplyKeyboardMarkup(
    keyboard=[[button_1, button_2], [contact_btn], [geo_btn], [poll_btn]], 
    resize_keyboard=True, 
    one_time_keyboard=True
)

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫, –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –∏–≥—Ä–µ
ATTEMPTS = 5

# –°–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
users = {}


# –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–ª—É—á–∞–π–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100
def get_random_number() -> int:
    random_number = random.randint(1, 100)
    logger.debug(f"Random number set: {random_number}")
    return random_number


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
# –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ —á–∞—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
@dp.message(CommandStart())
async def process_start_command(message: Message):
    logger.info("User launched the bot")
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç!\n–î–∞–≤–∞–π—Ç–µ —Å—ã–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"?\n\n'
        '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö '
        '–∫–æ–º–∞–Ω–¥ - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /help\n\n'
        '–ß–µ–≥–æ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ?', 
        reply_markup=keyboard
    )
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ–ª—å–∫–æ –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ
    # 'users' - –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å
    if message.from_user.id not in users:
        users[message.from_user.id] = {
            'in_game': False,
            'secret_number': None,
            'attempts': None,
            'total_games': 0,
            'wins': 0
        }


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/help"
@dp.message(Command(commands='help'))
async def process_help_command(message: Message):
    logger.info("User asked for help")
    await message.answer(
        f'–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n\n–Ø –∑–∞–≥–∞–¥—ã–≤–∞—é —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100, '
        f'–∞ –≤–∞–º –Ω—É–∂–Ω–æ –µ–≥–æ —É–≥–∞–¥–∞—Ç—å\n–£ –≤–∞—Å –µ—Å—Ç—å {ATTEMPTS} '
        f'–ø–æ–ø—ã—Ç–æ–∫\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/help - –ø—Ä–∞–≤–∏–ª–∞ '
        f'–∏–≥—Ä—ã –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n/cancel - –≤—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã\n'
        f'/stat - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n\n–î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º?'
    )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–°–æ–±–∞–∫ ü¶Æ"
@dp.message(F.text == '–°–æ–±–∞–∫ ü¶Æ')
async def process_dog_answer(message: Message):
    logger.info("User chose 'dogs'")
    await message.answer(
        text='–î–∞, –Ω–µ—Å–æ–º–Ω–µ–Ω–Ω–æ, –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è —Å–æ–±–∞–∫. '
             '–ù–æ –≤—ã –≤–∏–¥–µ–ª–∏ –∫–∞–∫ –æ–Ω–∏ –±–æ—è—Ç—Å—è –æ–≥—É—Ä—Ü–æ–≤?'
    )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–≤–µ—Ç "–û–≥—É—Ä—Ü–æ–≤ ü•í"
@dp.message(F.text == '–û–≥—É—Ä—Ü–æ–≤ ü•í')
async def process_cucumber_answer(message: Message):
    logger.info("User chose 'cucumbers'")
    await message.answer(
        text='–î–∞, –∏–Ω–æ–≥–¥–∞ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ –æ–≥—É—Ä—Ü–æ–≤ '
             '–∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ'
    )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/stat"
@dp.message(Command(commands='stat'))
async def process_stat_command(message: Message):
    logger.info("User asked for stat")
    await message.answer(
        f'–í—Å–µ–≥–æ –∏–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: '
        f'{users[message.from_user.id]["total_games"]}\n'
        f'–ò–≥—Ä –≤—ã–∏–≥—Ä–∞–Ω–æ: {users[message.from_user.id]["wins"]}'
    )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/cancel"
@dp.message(Command(commands='cancel'))
async def process_cancel_command(message: Message):
    logger.info("User cancels the game")
    if users[message.from_user.id]['in_game']:
        users[message.from_user.id]['in_game'] = False
        await message.answer(
            '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã. –ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å '
            '—Å–Ω–æ–≤–∞ - –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º'
        )
    else:
        await message.answer(
            '–ê –º—ã –∏ —Ç–∞–∫ —Å –≤–∞–º–∏ –Ω–µ –∏–≥—Ä–∞–µ–º. '
            '–ú–æ–∂–µ—Ç, —Å—ã–≥—Ä–∞–µ–º —Ä–∞–∑–æ–∫?'
        )

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Å–æ–≥–ª–∞—Å–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—ã–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É
@dp.message(F.text.lower().in_(['–¥–∞', '–¥–∞–≤–∞–π', '—Å—ã–≥—Ä–∞–µ–º', '–∏–≥—Ä–∞',
                                '–∏–≥—Ä–∞—Ç—å', '—Ö–æ—á—É –∏–≥—Ä–∞—Ç—å']))
async def process_positive_answer(message: Message):
    logger.info("User agreed to start new game")
    if not users[message.from_user.id]['in_game']:
        users[message.from_user.id]['in_game'] = True
        users[message.from_user.id]['secret_number'] = get_random_number()
        users[message.from_user.id]['attempts'] = ATTEMPTS
        await message.answer(
            '–£—Ä–∞!\n\n–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100, '
            '–ø–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!'
        )
    else:
        await message.answer(
            '–ü–æ–∫–∞ –º—ã –∏–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É —è –º–æ–≥—É '
            '—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100 '
            '–∏ –∫–æ–º–∞–Ω–¥—ã /cancel –∏ /stat'
        )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—ã–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É
@dp.message(F.text.lower().in_(['–Ω–µ—Ç', '–Ω–µ', '–Ω–µ —Ö–æ—á—É', '–Ω–µ –±—É–¥—É']))
async def process_negative_answer(message: Message):
    logger.info("User refused to start new game")
    if not users[message.from_user.id]['in_game']:
        await message.answer(
            '–ñ–∞–ª—å :(\n\n–ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å - –ø—Ä–æ—Å—Ç–æ '
            '–Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º'
        )
    else:
        await message.answer(
            '–ú—ã –∂–µ —Å–µ–π—á–∞—Å —Å –≤–∞–º–∏ –∏–≥—Ä–∞–µ–º. –ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ, '
            '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100'
        )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 100
@dp.message(lambda x: x.text and x.text.isdigit() and 1 <= int(x.text) <= 100)
async def process_numbers_answer(message: Message):
    logger.info(f"User entered a nubmer {message.text}")
    if users[message.from_user.id]['in_game']:
        if int(message.text) == users[message.from_user.id]['secret_number']:
            users[message.from_user.id]['in_game'] = False
            users[message.from_user.id]['total_games'] += 1
            users[message.from_user.id]['wins'] += 1
            await message.answer(
                '–£—Ä–∞!!! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ!\n\n'
                '–ú–æ–∂–µ—Ç, —Å—ã–≥—Ä–∞–µ–º –µ—â–µ?'
            )
        elif int(message.text) > users[message.from_user.id]['secret_number']:
            users[message.from_user.id]['attempts'] -= 1
            await message.answer('–ú–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ')
        elif int(message.text) < users[message.from_user.id]['secret_number']:
            users[message.from_user.id]['attempts'] -= 1
            await message.answer('–ú–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ')

        if users[message.from_user.id]['attempts'] == 0:
            users[message.from_user.id]['in_game'] = False
            users[message.from_user.id]['total_games'] += 1
            await message.answer(
                f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –≤–∞—Å –±–æ–ª—å—à–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å '
                f'–ø–æ–ø—ã—Ç–æ–∫. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ :(\n\n–ú–æ–µ —á–∏—Å–ª–æ '
                f'–±—ã–ª–æ {users[message.from_user.id]["secret_number"]}'
                f'\n\n–î–∞–≤–∞–π—Ç–µ —Å—ã–≥—Ä–∞–µ–º –µ—â–µ?'
            )
    else:
        await message.answer('–ú—ã –µ—â–µ –Ω–µ –∏–≥—Ä–∞–µ–º. –•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å?')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@dp.message()
async def process_other_answers(message: Message):
    if users[message.from_user.id]['in_game']:
        logger.info(f'Incorrect message during the game -- {message}')
        await message.answer(
            '–ú—ã –∂–µ —Å–µ–π—á–∞—Å —Å –≤–∞–º–∏ –∏–≥—Ä–∞–µ–º. '
            '–ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100'
        )
    else:
        logger.info(f'Incorrect message outside the game -- {message}')
        await message.answer(
            '–Ø –¥–æ–≤–æ–ª—å–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –±–æ—Ç, –¥–∞–≤–∞–π—Ç–µ '
            '–ø—Ä–æ—Å—Ç–æ —Å—ã–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É?'
        )


if __name__ == '__main__':
    # –í—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—á–∞–ª–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    logger.info('Starting bot')
    dp.run_polling(bot)
